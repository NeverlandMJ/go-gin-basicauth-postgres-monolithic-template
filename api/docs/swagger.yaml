basePath: /v1
definitions:
  models.DefaultResponse:
    properties:
      error_code:
        type: integer
      error_message:
        type: string
    type: object
  models.TemplateApiFindResponse:
    properties:
      body:
        $ref: '#/definitions/models.TemplateFindResponse'
      error_code:
        type: integer
      error_message:
        type: string
    type: object
  models.TemplateApiResponse:
    properties:
      body:
        $ref: '#/definitions/models.TemplateResponse'
      error_code:
        type: integer
      error_message:
        type: string
    type: object
  models.TemplateCreateReq:
    properties:
      template_name:
        type: string
    type: object
  models.TemplateFindResponse:
    properties:
      count:
        type: integer
      templates:
        items:
          $ref: '#/definitions/models.TemplateResponse'
        type: array
    type: object
  models.TemplateResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      template_name:
        type: string
      updated_at:
        type: string
    type: object
  models.TemplateUpdateReq:
    properties:
      id:
        type: integer
      template_name:
        type: string
    type: object
info:
  contact: {}
  description: Here QA can test and frontend or mobile developers can get information
    of API endpoints.
  title: Template project API Endpoints
  version: "1.0"
paths:
  /template:
    post:
      consumes:
      - application/json
      description: Here template can be created.
      parameters:
      - description: post info
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.TemplateCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TemplateApiResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.DefaultResponse'
      security:
      - BearerAuth: []
      summary: Create template
      tags:
      - Template
    put:
      consumes:
      - application/json
      description: Here template can be updated.
      parameters:
      - description: post info
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.TemplateUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TemplateApiResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.DefaultResponse'
      security:
      - BearerAuth: []
      summary: Update template
      tags:
      - Template
  /template/{id}:
    delete:
      consumes:
      - application/json
      description: Here template can be deleted.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DefaultResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.DefaultResponse'
      security:
      - BearerAuth: []
      summary: Delete template
      tags:
      - Template
    get:
      consumes:
      - application/json
      description: Here template can be got.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TemplateApiResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.DefaultResponse'
      summary: Get template by key
      tags:
      - Template
  /template/list:
    get:
      consumes:
      - application/json
      description: Here all templates can be got.
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TemplateApiFindResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.DefaultResponse'
      summary: Get templates list
      tags:
      - Template
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
