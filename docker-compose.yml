version: '3.8'
services:
  postgres:
    container_name: database
    image: postgres:13
    restart: unless-stopped
    environment:
      POSTGRES_USER: templateuser
      POSTGRES_PASSWORD: templatesecret
      POSTGRES_DB: templatedatabase
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U templateuser"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    container_name: migrate
    image: migrate/migrate:v4.15.2
    profiles: ["tools"]
    volumes:
      - ./migrations:/migrations
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_USER=templateuser
      - POSTGRES_PASSWORD=templatesecret
      - POSTGRES_NAME=templatedatabase
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgres://templateuser:templatesecret@database:5432/templatedatabase?sslmode=disable",
      ]
    command: ["up"]
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure


  app:
    container_name: gin-postgres-basicauth-monolithic
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_USER=templateuser
      - POSTGRES_PASSWORD=templatesecret
      - POSTGRES_NAME=templatedatabase
    restart: unless-stopped
    ports:
      - 8000:8000

volumes:
  postgres_data: